name: create-deployment

on:
  workflow_call:
    inputs:
      endpoint_file:
        required: true
        type: string
      resource_group:
        required: true
        type: string
      workspace_name:
        required: true
        type: string
      endpoint_name:
        required: true
        type: string
      endpoint_type:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
    secrets:
      creds:
        required: true
jobs:
  create-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          creds: ${{secrets.creds}}
          enable-AzPSSession: true
      - name: install-extension
        run: az extension add -n ml -y || az extension update -n ml

      - name: check-if-deployment-exists
        id: check-deployment
        run: |
          if az ml ${{ inputs.endpoint_type }}-deployment show \
            --name ${{ inputs.deployment_name }} \
            --endpoint-name ${{ inputs.endpoint_name }} \
            --resource-group ${{ inputs.resource_group }} \
            --workspace-name ${{ inputs.workspace_name }} > /dev/null 2>&1; then
              echo "DEPLOYMENT_EXISTS=true" >> $GITHUB_ENV
          else
              echo "DEPLOYMENT_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: create-deployment
        if: env.DEPLOYMENT_EXISTS == 'false'
        run: |
          echo "Deployment does not exist, creating a new one..."
          az ml ${{ inputs.endpoint_type }}-deployment create --name ${{ inputs.deployment_name }} \
            --endpoint ${{ inputs.endpoint_name }} \
            -f ${{ github.workspace }}/${{ inputs.endpoint_file }} \
            --resource-group ${{ inputs.resource_group }} \
            --workspace-name ${{ inputs.workspace_name }}

      - name: update-deployment
        if: env.DEPLOYMENT_EXISTS == 'true'
        run: |
          echo "Deployment already exists, updating..."
          az ml ${{ inputs.endpoint_type }}-deployment update --name ${{ inputs.deployment_name }} \
            --endpoint ${{ inputs.endpoint_name }} \
            -f ${{ github.workspace }}/${{ inputs.endpoint_file }} \
            --resource-group ${{ inputs.resource_group }} \
            --workspace-name ${{ inputs.workspace_name }}
